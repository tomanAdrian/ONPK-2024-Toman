namespace: onpkapp
serviceAccount:
  create: true

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: true
  className: nginx
  hosts:
    - host: onpkapp.mydomain.local
      paths:
        - path: /
          pathType: ImplementationSpecific

frontend:
  replicaCount: 1

  image:
    repository: tomanAdrian/appfrontend
    tag: "1.0.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

  env:
    REACT_APP_APIHOSTPORT: "http://onpkapp.mydomain.local/platforms"

  ingress:
    enabled: true  

backend:
  replicaCount: 1

  image:
    repository: tomanAdrian/appbackend
    tag: "1.0.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9080
    targetPort: 9080

  env:
    MONGO_CONN_STR: "mongodb://onpkapp-mongodb:27017/platformsdb"
    MONGO_AUTH_SOURCE: "platformsdb"
    MONGO_USERNAME: "admin"
    MONGO_PASSWORD: "password"
    
  ingress:
    enabled: true  
    className: nginx
    hosts:
      - host: backend.onpkapp.mydomain.local
        paths:
          - path: /
            pathType: ImplementationSpecific

mongodb:
  auth:
    username: admin
    password: password
    database: platformsdb

initdbScripts:
    init.js: |
      db = db.getSiblingDB("platformsdb");
      #db.createUser({
        #user: "admin",
        #password: "password",
       # roles: [{ role: "readWrite", db: "platformsdb" }],
      #});
      db.createCollection("platforms");
      db.platforms.insertMany([
        {
          name: "openshift",
          codedetail: {
            usecase: "Container platform",
            rank: 12,
            homepage: "https://openshift.com",
            download:
              "https://developers.redhat.com/products/codeready-containers/overview",
            votes: 0,
          },
        },
        {
          name: "kubernetes",
          codedetail: {
            usecase: "Container orchestration platform",
            rank: 38,
            homepage: "https://kubernetes.com",
            download: "https://kubernetes.io/docs/tasks/tools/install-minikube/",
            votes: 0,
          },
        },
        {
          name: "rancher",
          codedetail: {
            usecase: "Container platform management",
            rank: 50,
            homepage: "https://rancher.com/",
            download: "https://github.com/rancher/rancher",
            votes: 0,
          },
        },
      ]);
